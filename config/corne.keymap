/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/ {
        behaviors {

                &mt {
                        tapping-term-ms = <200>;
                        flavor = "hold-preferred";
                };

                lt_impl: layer-tap-by-hold-tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "LAYER_TAP_BY_HOLD_TAP";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        quick-tap-ms = <0>;
                        flavor = "hold-preferred";
                        bindings = <&mo>, <&kp>;
                };

                td1: tap_dance_1 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_1";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&mt LCTRL TAB>, <&kp ESC>;
                };

                td2: tap_dance_2 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_SLASH";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp FSLH>, <&kp BSLH>;
                };

                td3: tap_dance_3 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_TRATTINO";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp MINUS>, <&kp UNDER>;
                };
        };

        combos {
                combo_esc {
                compatible = "zmk,combos";
                timeout-ms = <50>;
                key-positions = <1 2>;
                bindings = <&kp ESC>;
                };

                combo_tab {
                        compatible = "zmk,combos";
                        timeout-ms = <50>;
                        key-positions = <7 8>;
                        bindings = <&kp TAB>;
                };

                combo_caps {
                        compatible = "zmk,combos";
                        timeout-ms = <50>;
                        key-positions = <13 22>;
                        bindings = <&kp CAPS>;
                };

                combo_semicolon {
                        compatible = "zmk,combos";
                        timeout-ms = <50>;
                        key-positions = <33 34>;
                        bindings = <&kp SEMI>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |   0  |  Q  |  W  |  E  |  R  |  T  |5   6|  Y  |  U   |  I  |  O  |  P  |  11  |
// |  12  |  A  |  S  |  D  |  F  |  G  |17 18|  H  |  J   |  K  |  L  |  ;  |  23  |
// |  24  |  Z  |  X  |  C  |  V  |  B  |29 30|  N  |  M   |  ,  |  .  |  /  |  36  |
//                  37| GUI |  L2 | SPC |39 40| ENT|  L1  | ALT |42

                        bindings = <
   &none &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U  &kp I     &kp O   &kp P    &none
   &none &mt LSHIFT A &mt LCTRL S &mt LALT D &kp F &kp G   &kp H &kp J  &mt RALT K &mt RCTRL L &mt RSHIFT APOS &none
   &none &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &td2     &none
                  &kp LGUI &lt 2 BSPC &kp SPACE   &kp RET &lt_impl 1 DEL &kp RALT
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
// |      | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |

                        bindings = <
   &trans &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &trans
   &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &trans &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };


                raise_layer {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
// |      |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |      |
// |      |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |

                        bindings = <
   &trans &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &trans
   &trans &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &trans
   &trans &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &trans
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};