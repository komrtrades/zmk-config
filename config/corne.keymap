/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/ {
        combos {
                compatible = "zmk,combos";
                combo_cword {
                        timeout-ms = <50>;
                        key-positions = <7 8>;
                        bindings = <&kp TAB>;
                };

                combo_esc {
                        timeout-ms = <50>;
                        key-positions = <1 2>;
                        bindings = <&kp ESC>;
                };

                combo_caps {
                        timeout-ms = <50>;
                        key-positions = <13 22>;
                        bindings = <&kp CAPS>;
                };

                combo_semicolon {
                        timeout-ms = <50>;
                        key-positions = <33 34>;
                        bindings = <&kp SEMI>;
                };

        };


        behaviors {

                lt_impl: layer-tap-by-hold-tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "LAYER_TAP_BY_HOLD_TAP";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&mo>, <&kp>;
                };

                td1: tap_dance_1 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_1";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&mt LCTRL TAB>, <&kp ESC>;
                };

                td2: tap_dance_2 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_SLASH";
                        #binding-cells = <0>;
                        tapping-term-ms = <300>;
                        bindings = <&kp FSLH>, <&kp BSLH>;
                };

                td3: tap_dance_3 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_TRATTINO";
                        #binding-cells = <0>;
                        tapping-term-ms = <300>;
                        bindings = <&kp MINUS>, <&kp UNDER>;
                };

                td4: tap_dance_4 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_PLUS";
                        #binding-cells = <0>;
                        tapping-term-ms = <250>;
                        bindings = <&kp PLUS>, <&kp STAR>;
                };

                td5: tap_dance_5 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_MINUS";
                        #binding-cells = <0>;
                        tapping-term-ms = <300>;
                        bindings = <&kp MINUS>, <&kp FSLH>;                       
                };

                td6: tap_dance_6 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_ZERO";
                        #binding-cells = <0>;
                        tapping-term-ms = <250>;
                        bindings = <&kp N0>, <&kp EQUAL>;                        
                };

                td7: tap_dance_7 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_LTGT";
                        #binding-cells = <0>;
                        tapping-term-ms = <250>;
                        bindings = <&kp LT>, <&kp GT>;
                };
        };

        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                if-layers = <1 2>;
                then-layer = <3>;
                };
        };



        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |   0  |  Q  |  W  |  E  |  R  |  T  |5   6|  Y  |  U   |  I  |  O  |  P  |  11  |
// |  12  |  A  |  S  |  D  |  F  |  G  |17 18|  H  |  J   |  K  |  L  |  '  |  23  |
// |  24  |  Z  |  X  |  C  |  V  |  B  |29 30|  N  |  M   |  ,  |  .  |  /  |  36  |
//                  37| GUI | L2  | SPC |39 40| ENT |  L1  | ALT |42

                        bindings = <
        &none   &kp Q           &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U           &kp I           &kp O           &kp P                   &none
        &none   &mt LSHIFT A    &mt LCTRL S     &mt LALT D      &kp F           &kp G           &kp H           &kp J           &mt RALT K      &mt RCTRL L     &mt RSHIFT APOS         &none
        &none   &kp Z           &kp X           &kp C           &kp V           &kp B           &kp N           &kp M           &kp COMMA       &kp DOT         &td2                    &none
                        &kp LGUI                &lt_impl 1 LGUI              &kp SPACE                       &kp RET                 &lt_impl 2 BSPC         &kp RALT
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |      |  !  |  $  |  [  |  ]  |     |   | + * |  7  |  8  |  9  | < > |      |
// |      |  <  |  >  |  (  |  )  |     |   | - / |  4  |  5  |  6  |GRAVE|      |
// |      |  &  |  %  |  {  |  }  |     |   | 0 = |  1  |  2  |  3  | - _ |      |
//                    |     |     |     |   |     |     |     |

                        bindings = <
        &none   &kp EXCL  &kp DLLR   &kp LBKT    &kp RBKT   &none           &td4    &kp N7    &kp N8    &kp N9    &td7        &none
        &none   &kp LT    &kp GT     &kp LPAR    &kp RPAR   &none           &td5    &kp N4    &kp N5    &kp N6    &kp GRAVE   &none
        &none   &kp AMPS  &kp PRCNT  &kp LBRC    &kp RBRC   &none           &td6    &kp N1    &kp N2    &kp N3    &td3        &none
                         &kp LGUI     &trans       &kp SPACE                            &trans  &lt_impl 2 DEL   &trans
                        >;
                };


                raise_layer {
// -----------------------------------------------------------------------------------------
// |      |     | PGUP|  UP |PGDWN|     |   |     |     |     |     |     | INS  |
// |      |INIZ | LFT | DWN | RGHT|FINE |   |     |LCLK |RCLK |     |SCRLK|      |
// |      |     |     |     |     |     |   |  _  |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |

                        bindings = <
   &none  &none         &kp PAGE_UP     &kp UP          &kp PAGE_DOWN   &none                  &none    &none    &none     &none       &kp INS      &none
   &none  &kp HOME      &kp LEFT        &kp DOWN        &kp RIGHT       &kp END                &none    &none    &kp RALT  &kp RCTRL   &kp RSHIFT   &none        
   &none  &none         &none           &none           &none           &none                  &none    &none    &none     &none       &none        &none 
                                        &kp LALT  &lt_impl 1 LGUI  &trans                                     &trans   &trans    &trans
                        >;
                };


                function_layer {
                        bindings = <
   &none  &kp PRINTSCREEN &kp F7  &kp F8  &kp F9  &kp F10             &kp K_MUTE     &kp C_VOL_UP    &kp C_VOL_DN   &kp C_BRI_UP   &kp C_BRI_DN  &none
   &none  &none           &kp F4  &kp F5  &kp F6  &kp F11             &none          &to 4           &to 5          &to 6          &none         &none        
   &none  &none           &kp F1  &kp F2  &kp F2  &kp F12             &to 0          &to 1           &to 2          &to 3          &none         &none 
                       &kp LALT  &lt_impl 1 LGUI  &trans                           &trans   &trans    &trans
                        >;
                };                


                
                writing_layer {
                        bindings = <
        &none   &kp Q  &kp W   &kp E    &kp R    &kp T           &kp Y    &kp U    &kp I        &kp O      &kp P      &none
        &none   &kp A  &kp S   &kp D    &kp F    &kp G           &kp H    &kp J    &kp K        &kp L      &kp APOS   &none
        &none   &kp Z  &kp X   &kp C    &kp V    &kp B           &kp N    &kp M    &kp COMMA    &kp DOT    &td2       &none
                 &kp LCTRL   &lt_impl 1 LGUI   &kp SPACE                       &kp RET    &lt_impl 2 BSPC    &kp RALT
                        >;
                };


        };
};
